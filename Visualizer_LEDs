#include <Adafruit_NeoPixel.h>
#include <SoftwareSerial.h>

#define PIN 7
#define NUM_LEDS 150
#define BRIGHTNESS 50

SoftwareSerial mySerial(10,11);
Adafruit_NeoPixel strip = Adafruit_NeoPixel(NUM_LEDS, PIN, NEO_GRB + NEO_KHZ800);
void react(uint16_t * row1, uint16_t * row2, uint16_t * row3, uint8_t led_num);
void smartfusion(uint16_t * levels);

uint32_t RED = strip.Color(255,0,0);
uint32_t GREEN = strip.Color(0,255,0);
uint32_t BLUE = strip.Color(0,0,255);
uint32_t YELLOW = strip.Color(255,215,0);
uint32_t WHITE = strip.Color(255,255,255);

uint16_t treb1[] = {5,6,7,8,9,10,11,12,13,14,15};
uint16_t treb2[] = {19,20,21,22,23,24,25,26,27,28,29};
uint16_t treb3[] = {32,33,34,35,36,37,38,39,40,41,42};

uint16_t mid1[] = {47,48,49,50,51,52,53,54,55,56,57};
uint16_t mid2[] = {61,62,63,64,65,66,67,68,69,70,71};
uint16_t mid3[] = {76,77,78,79,80,81,82,83,84,85,86};

uint16_t bass1[] = {90,91,92,93,94,95,96,97,98,99,100};
uint16_t bass2[] = {106,107,108,109,110,111,112,113,114,115,116};
uint16_t bass3[] = {120,121,122,123,124,125,126,127,128,129,130};

uint8_t len = 1;
uint8_t received;
uint32_t treb_amp;
uint32_t mid_amp;
uint32_t bass_amp;

void setup() {
  Serial.begin(57600);
  strip.setBrightness(BRIGHTNESS);
  while (!Serial){
    ;
  }
  mySerial.begin(57600);
  strip.begin();
  strip.show();
}

void loop() {
  if (mySerial.available()){
    treb_amp = mySerial.read();
    if (treb_amp < 6)
      react(treb1, treb2, treb3, treb_amp);
    Serial.println(treb_amp);
  }
  if (mySerial.available()){
    mid_amp = mySerial.read();
    if (mid_amp < 6)
      react(mid1, mid2, mid3, mid_amp);
    Serial.println(mid_amp);
  }
  if (mySerial.available()){
    bass_amp = mySerial.read();
    if (bass_amp < 6)
      react(bass1, bass2, bass3, bass_amp);
    Serial.println(bass_amp);
  }

//  react(treb1, treb2, treb3, random(6));
//  react(mid1, mid2, mid3, random(6));
//  react(bass1, bass2, bass3, random(6));
//  delay(5);
}

void react(uint16_t * row1, uint16_t * row2, uint16_t * row3, uint8_t led_num){
  int side = 5;
  for (int i = 0; i <= side; i++){
    if (i <= led_num){
      if (i <= 1 ){
          strip.setPixelColor(row1[5+i], GREEN);
          strip.setPixelColor(row1[5-i], GREEN);
          //delay(1);
          strip.show();
          strip.setPixelColor(row2[5+i], GREEN);
          strip.setPixelColor(row2[5-i], GREEN);
          //delay(1);
          strip.show();
          strip.setPixelColor(row3[5+i], GREEN);
          strip.setPixelColor(row3[5-i], GREEN);
      }
      else if (i <= 3){
          strip.setPixelColor(row1[5+i], YELLOW);
          strip.setPixelColor(row1[5-i], YELLOW);
          //delay(1);
          strip.show();
          strip.setPixelColor(row2[5+i], YELLOW);
          strip.setPixelColor(row2[5-i], YELLOW);
          //delay(1);
          strip.show();
          strip.setPixelColor(row3[5+i], YELLOW);
          strip.setPixelColor(row3[5-i], YELLOW);
      }
      else{
          strip.setPixelColor(row1[5+i], RED);
          strip.setPixelColor(row1[5-i], RED);
          //delay(1);
          strip.show();
          strip.setPixelColor(row2[5+i], RED);
          strip.setPixelColor(row2[5-i], RED);
          //delay(1);
          strip.show();
          strip.setPixelColor(row3[5+i], RED);
          strip.setPixelColor(row3[5-i], RED);
      }
    }
    else{
      strip.setPixelColor(row1[5+i], 0);
      strip.setPixelColor(row1[5-i], 0);
      strip.setPixelColor(row2[5+i], 0);
      strip.setPixelColor(row2[5-i], 0);
      strip.setPixelColor(row3[5+i], 0);
      strip.setPixelColor(row3[5-i], 0);
    }
  } 
}

//void pulsing(){
//    react(treb1, treb2, treb3, 2);
//    react(mid1, mid2, mid3, 2);
//    react(bass1, bass2, bass3, 0);
// 
//    react(treb1, treb2, treb3, 1);
//    react(mid1, mid2, mid3, 3);
//    react(bass1, bass2, bass3, 1);
//
//    react(treb1, treb2, treb3, 0);
//    react(mid1, mid2, mid3, 4);
//    react(bass1, bass2, bass3, 2);
//
//    react(treb1, treb2, treb3, 1);
//    react(mid1, mid2, mid3, 5);
//    react(bass1, bass2, bass3, 3);
//
//    react(treb1, treb2, treb3, 2);
//    react(mid1, mid2, mid3, 4);
//    react(bass1, bass2, bass3, 4);
//
//    react(treb1, treb2, treb3, 3);
//    react(mid1, mid2, mid3, 3);
//    react(bass1, bass2, bass3, 5);
//
//    react(treb1, treb2, treb3, 4);
//    react(mid1, mid2, mid3, 2);
//    react(bass1, bass2, bass3, 4);
//   
//    react(treb1, treb2, treb3, 5);
//    react(mid1, mid2, mid3, 1);
//    react(bass1, bass2, bass3, 3);
//  
//    react(treb1, treb2, treb3, 4);
//    react(mid1, mid2, mid3, 0);
//    react(bass1, bass2, bass3, 2);
//  
//    react(treb1, treb2, treb3, 3);
//    react(mid1, mid2, mid3, 1);
//    react(bass1, bass2, bass3, 1);
//}
//
//void freq_levels(){
//   for (uint16_t i = 0; i < 12; i++){
//    strip.setPixelColor(treb1[i], RED);
//    strip.setPixelColor(treb2[i], RED);
//    strip.setPixelColor(treb3[i], RED);
//
//    strip.setPixelColor(mid1[i], BLUE);
//    strip.setPixelColor(mid2[i], BLUE);
//    strip.setPixelColor(mid3[i], BLUE);
//
//    strip.setPixelColor(bass1[i], GREEN);
//    strip.setPixelColor(bass2[i], GREEN);
//    strip.setPixelColor(bass3[i], GREEN);
//    
//    delay(50);
//  }
//}
